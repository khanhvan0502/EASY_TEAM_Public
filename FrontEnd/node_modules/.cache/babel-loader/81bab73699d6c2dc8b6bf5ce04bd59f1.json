{"ast":null,"code":"// import React from \"react\";\n// import { Table, Button } from \"reactstrap\";\n// import axios from \"axios\";\n// import AddProfile from \"./AddProfile\";\n// import EditProfile from \"./EditProfile\";\n// class Profile extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       user: [],\n//       newUserData: {\n//         first_name: \"\",\n//         last_name: \"\",\n//         email: \"\",\n//         phone: \"\",\n//       },\n//       isLoading: false,\n//       status: \"\",\n//       newUserModal: false,\n//       editUserData: {\n//         id: \"\",\n//         first_name: \"\",\n//         last_name: \"\",\n//         email: \"\",\n//         phone: \"\",\n//       },\n//       editUserModal: false,\n//       noDataFound: \"\",\n//     };\n//   }\n//   componentDidMount() {\n//     this.getUsers();\n//   }\n//   getUsers() {\n//     axios.get(`api/profile`).then((response) => {\n//       if (response.status === 200) {\n//         this.setState({\n//           users: response.data ? response.data : [],\n//         });\n//       }\n//       if (\n//         response.data.status === \"failed\" &&\n//         response.data.success === false\n//       ) {\n//         this.setState({\n//           noDataFound: response.data.message,\n//         });\n//       }\n//     });\n//   }\n//   toggleNewUserModal = () => {\n//     this.setState({\n//       newUserModal: !this.state.newUserModal,\n//     });\n//   };\n//   onChangeAddUserHandler = (e) => {\n//     let { newUserData } = this.state;\n//     newUserData[e.target.name] = e.target.value;\n//     this.setState({ newUserData });\n//   };\n//   addUser = () => {\n//     axios.post(`api/register`, this.state.newUserData).then((response) => {\n//       const { users } = this.state;\n//       const newUsers = [...users];\n//       newUsers.push(response.data);\n//       this.setState(\n//         {\n//           users: newUsers,\n//           newUserModal: false,\n//           newUserData: {\n//             fullname: \"\",\n//             username: \"\",\n//             email: \"\",\n//             password: \"\",\n//             phone: \"\",\n//           },\n//         },\n//         () => this.getUsers()\n//       );\n//     });\n//   };\n//   //-------------------------------------------------\n//   // Edit User\n//   toggleEditUserModal = () => {\n//     this.setState({\n//       editUserModal: !this.state.editUserModal,\n//     });\n//   };\n//   onChangeEditUserHanler = (e) => {\n//     let { editUserData } = this.state;\n//     editUserData[e.target.name] = e.target.value;\n//     this.setState({ editUserData });\n//   };\n//   editUser = (id, fullname, username, email, phone) => {\n//     this.setState({\n//       editUserData: {\n//         id,\n//         fullname,\n//         username,\n//         email,\n//         phone,\n//       },\n//       editUserModal: !this.state.editUserModal,\n//     });\n//   };\n//   updateUser = () => {\n//     let { id, fullname, username, email, phone } = this.state.editUserData;\n//     this.setState({\n//       isLoading: true,\n//     });\n//     axios\n//       .post(`api/register`, {\n//         fullname,\n//         username,\n//         email,\n//         phone,\n//         id,\n//       })\n//       .then((response) => {\n//         this.getUsers();\n//         this.setState({\n//           editUserModal: false,\n//           editUserData: {\n//             fullname,\n//             username,\n//             email,\n//             phone,\n//             id,\n//           },\n//           isLoading: false,\n//         });\n//       })\n//       .catch((error) => {\n//         this.setState({ isLoading: false });\n//         console.log(error.response);\n//       });\n//   };\n//   deleteUser = (id) => {\n//     this.setState({\n//       isLoading: true,\n//     });\n//     axios\n//       .delete(`api/delete/` + id)\n//       .then((response) => {\n//         this.setState({\n//           isLoading: false,\n//         });\n//         this.getUsers();\n//       })\n//       .catch((error) => {\n//         this.setState({\n//           isLoading: false,\n//         });\n//       });\n//   };\n//   render() {\n//     const { newUserData, editUserData, noDataFound, users } = this.state;\n//     let usersDetails = [];\n//     if (users.length) {\n//       usersDetails = users.map((user, index) => {\n//         return (\n//           <tr key={user.id}>\n//             <td>{index + 1}</td>\n//             <td>{user.fullname}</td>\n//             <td>{user.username}</td>\n//             <td>{user.email}</td>\n//             <td>{user.phone}</td>\n//             <td>\n//               <Button\n//                 color=\"success\"\n//                 className=\"mr-3\"\n//                 size=\"sm\"\n//                 onClick={() =>\n//                   this.editUser(\n//                     user.id,\n//                     user.fullname,\n//                     user.username,\n//                     user.email,\n//                     user.phone\n//                   )\n//                 }\n//               >\n//                 Edit\n//               </Button>\n//               <Button\n//                 color=\"danger\"\n//                 size=\"sm\"\n//                 onClick={() => this.deleteUser(user.id)}\n//               >\n//                 Delete\n//               </Button>\n//             </td>\n//           </tr>\n//         );\n//       });\n//     }\n//     if (this.state.isLoading) {\n//       return (\n//         <div className=\"spinner-border text-center\" role=\"status\">\n//           {\" \"}\n//           <span className=\"sr-only\">Loading...</span>\n//         </div>\n//       );\n//     }\n//     return (\n//       <div className=\"App container mt-4\">\n//         <h4 className=\"font-weight-bold\">Quản lý user</h4>\n//         {/* Model for Add Studnet Record */}\n//         <AddProfile\n//           toggleNewUserModal={this.toggleNewUserModal}\n//           newUserModal={this.state.newUserModal}\n//           onChangeAddUserHandler={this.onChangeAddUserHandler}\n//           addUser={this.addUser}\n//           newUserData={newUserData}\n//         />\n//         {/* Model for Edit User Record */}\n//         <EditProfile\n//           toggleEditUserModal={this.toggleEditUserModal}\n//           editUserModal={this.state.editUserModal}\n//           onChangeEditUserHanler={this.onChangeEditUserHanler}\n//           editUser={this.editUser}\n//           editUserData={editUserData}\n//           updateUser={this.updateUser}\n//         />\n//         <Table>\n//           <thead>\n//             <tr>\n//               <th>ID</th>\n//               <th>Họ và tên</th>\n//               <th>Userame</th>\n//               <th>Email</th>\n//               <th>Điện thoại</th>\n//               <th>Hành động</th>\n//             </tr>\n//           </thead>\n//           {users.length === 0 ? (\n//             <tbody>\n//               <h3>{noDataFound}</h3>\n//             </tbody>\n//           ) : (\n//             <tbody>{usersDetails}</tbody>\n//           )}\n//         </Table>\n//       </div>\n//     );\n//   }\n// }\n// export default Profile;\n//---------------------------------------------------","map":{"version":3,"sources":["D:/xampp/htdocs/EASY_TEAM_4/gradution/FrontEnd/src/components/admin/Profile/Profile.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React from \"react\";\r\n// import { Table, Button } from \"reactstrap\";\r\n// import axios from \"axios\";\r\n// import AddProfile from \"./AddProfile\";\r\n// import EditProfile from \"./EditProfile\";\r\n// class Profile extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       user: [],\r\n//       newUserData: {\r\n//         first_name: \"\",\r\n//         last_name: \"\",\r\n//         email: \"\",\r\n//         phone: \"\",\r\n//       },\r\n//       isLoading: false,\r\n//       status: \"\",\r\n//       newUserModal: false,\r\n//       editUserData: {\r\n//         id: \"\",\r\n//         first_name: \"\",\r\n//         last_name: \"\",\r\n//         email: \"\",\r\n//         phone: \"\",\r\n//       },\r\n//       editUserModal: false,\r\n//       noDataFound: \"\",\r\n//     };\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     this.getUsers();\r\n//   }\r\n//   getUsers() {\r\n//     axios.get(`api/profile`).then((response) => {\r\n//       if (response.status === 200) {\r\n//         this.setState({\r\n//           users: response.data ? response.data : [],\r\n//         });\r\n//       }\r\n//       if (\r\n//         response.data.status === \"failed\" &&\r\n//         response.data.success === false\r\n//       ) {\r\n//         this.setState({\r\n//           noDataFound: response.data.message,\r\n//         });\r\n//       }\r\n//     });\r\n//   }\r\n\r\n//   toggleNewUserModal = () => {\r\n//     this.setState({\r\n//       newUserModal: !this.state.newUserModal,\r\n//     });\r\n//   };\r\n//   onChangeAddUserHandler = (e) => {\r\n//     let { newUserData } = this.state;\r\n//     newUserData[e.target.name] = e.target.value;\r\n//     this.setState({ newUserData });\r\n//   };\r\n//   addUser = () => {\r\n//     axios.post(`api/register`, this.state.newUserData).then((response) => {\r\n//       const { users } = this.state;\r\n//       const newUsers = [...users];\r\n//       newUsers.push(response.data);\r\n//       this.setState(\r\n//         {\r\n//           users: newUsers,\r\n//           newUserModal: false,\r\n//           newUserData: {\r\n//             fullname: \"\",\r\n//             username: \"\",\r\n//             email: \"\",\r\n//             password: \"\",\r\n//             phone: \"\",\r\n//           },\r\n//         },\r\n//         () => this.getUsers()\r\n//       );\r\n//     });\r\n//   };\r\n\r\n//   //-------------------------------------------------\r\n\r\n//   // Edit User\r\n//   toggleEditUserModal = () => {\r\n//     this.setState({\r\n//       editUserModal: !this.state.editUserModal,\r\n//     });\r\n//   };\r\n\r\n//   onChangeEditUserHanler = (e) => {\r\n//     let { editUserData } = this.state;\r\n//     editUserData[e.target.name] = e.target.value;\r\n//     this.setState({ editUserData });\r\n//   };\r\n\r\n//   editUser = (id, fullname, username, email, phone) => {\r\n//     this.setState({\r\n//       editUserData: {\r\n//         id,\r\n//         fullname,\r\n//         username,\r\n//         email,\r\n//         phone,\r\n//       },\r\n//       editUserModal: !this.state.editUserModal,\r\n//     });\r\n//   };\r\n\r\n//   updateUser = () => {\r\n//     let { id, fullname, username, email, phone } = this.state.editUserData;\r\n//     this.setState({\r\n//       isLoading: true,\r\n//     });\r\n//     axios\r\n//       .post(`api/register`, {\r\n//         fullname,\r\n//         username,\r\n//         email,\r\n//         phone,\r\n//         id,\r\n//       })\r\n//       .then((response) => {\r\n//         this.getUsers();\r\n//         this.setState({\r\n//           editUserModal: false,\r\n//           editUserData: {\r\n//             fullname,\r\n//             username,\r\n//             email,\r\n//             phone,\r\n//             id,\r\n//           },\r\n//           isLoading: false,\r\n//         });\r\n//       })\r\n//       .catch((error) => {\r\n//         this.setState({ isLoading: false });\r\n//         console.log(error.response);\r\n//       });\r\n//   };\r\n\r\n//   deleteUser = (id) => {\r\n//     this.setState({\r\n//       isLoading: true,\r\n//     });\r\n//     axios\r\n//       .delete(`api/delete/` + id)\r\n//       .then((response) => {\r\n//         this.setState({\r\n//           isLoading: false,\r\n//         });\r\n//         this.getUsers();\r\n//       })\r\n//       .catch((error) => {\r\n//         this.setState({\r\n//           isLoading: false,\r\n//         });\r\n//       });\r\n//   };\r\n\r\n//   render() {\r\n//     const { newUserData, editUserData, noDataFound, users } = this.state;\r\n//     let usersDetails = [];\r\n//     if (users.length) {\r\n//       usersDetails = users.map((user, index) => {\r\n//         return (\r\n//           <tr key={user.id}>\r\n//             <td>{index + 1}</td>\r\n//             <td>{user.fullname}</td>\r\n//             <td>{user.username}</td>\r\n//             <td>{user.email}</td>\r\n//             <td>{user.phone}</td>\r\n//             <td>\r\n//               <Button\r\n//                 color=\"success\"\r\n//                 className=\"mr-3\"\r\n//                 size=\"sm\"\r\n//                 onClick={() =>\r\n//                   this.editUser(\r\n//                     user.id,\r\n//                     user.fullname,\r\n//                     user.username,\r\n//                     user.email,\r\n//                     user.phone\r\n//                   )\r\n//                 }\r\n//               >\r\n//                 Edit\r\n//               </Button>\r\n//               <Button\r\n//                 color=\"danger\"\r\n//                 size=\"sm\"\r\n//                 onClick={() => this.deleteUser(user.id)}\r\n//               >\r\n//                 Delete\r\n//               </Button>\r\n//             </td>\r\n//           </tr>\r\n//         );\r\n//       });\r\n//     }\r\n\r\n//     if (this.state.isLoading) {\r\n//       return (\r\n//         <div className=\"spinner-border text-center\" role=\"status\">\r\n//           {\" \"}\r\n//           <span className=\"sr-only\">Loading...</span>\r\n//         </div>\r\n//       );\r\n//     }\r\n//     return (\r\n//       <div className=\"App container mt-4\">\r\n//         <h4 className=\"font-weight-bold\">Quản lý user</h4>\r\n//         {/* Model for Add Studnet Record */}\r\n//         <AddProfile\r\n//           toggleNewUserModal={this.toggleNewUserModal}\r\n//           newUserModal={this.state.newUserModal}\r\n//           onChangeAddUserHandler={this.onChangeAddUserHandler}\r\n//           addUser={this.addUser}\r\n//           newUserData={newUserData}\r\n//         />\r\n//         {/* Model for Edit User Record */}\r\n//         <EditProfile\r\n//           toggleEditUserModal={this.toggleEditUserModal}\r\n//           editUserModal={this.state.editUserModal}\r\n//           onChangeEditUserHanler={this.onChangeEditUserHanler}\r\n//           editUser={this.editUser}\r\n//           editUserData={editUserData}\r\n//           updateUser={this.updateUser}\r\n//         />\r\n//         <Table>\r\n//           <thead>\r\n//             <tr>\r\n//               <th>ID</th>\r\n//               <th>Họ và tên</th>\r\n//               <th>Userame</th>\r\n//               <th>Email</th>\r\n//               <th>Điện thoại</th>\r\n//               <th>Hành động</th>\r\n//             </tr>\r\n//           </thead>\r\n//           {users.length === 0 ? (\r\n//             <tbody>\r\n//               <h3>{noDataFound}</h3>\r\n//             </tbody>\r\n//           ) : (\r\n//             <tbody>{usersDetails}</tbody>\r\n//           )}\r\n//         </Table>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n// export default Profile;\r\n//---------------------------------------------------\r\n"]},"metadata":{},"sourceType":"module"}