{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\EASY_TEAM_4\\\\gradution\\\\FrontEnd\\\\src\\\\components\\\\admin\\\\Profile\\\\Profile.js\";\n// import React from \"react\";\n// import { Table, Button } from \"reactstrap\";\n// import axios from \"axios\";\n// import AddProfile from \"./AddProfile\";\n// import EditProfile from \"./EditProfile\";\n// class Profile extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       user: [],\n//       newUserData: {\n//         first_name: \"\",\n//         last_name: \"\",\n//         email: \"\",\n//         phone: \"\",\n//       },\n//       isLoading: false,\n//       status: \"\",\n//       newUserModal: false,\n//       editUserData: {\n//         id: \"\",\n//         first_name: \"\",\n//         last_name: \"\",\n//         email: \"\",\n//         phone: \"\",\n//       },\n//       editUserModal: false,\n//       noDataFound: \"\",\n//     };\n//   }\n//   componentDidMount() {\n//     this.getUsers();\n//   }\n//   getUsers() {\n//     axios.get(`api/profile`).then((response) => {\n//       if (response.status === 200) {\n//         this.setState({\n//           users: response.data ? response.data : [],\n//         });\n//       }\n//       if (\n//         response.data.status === \"failed\" &&\n//         response.data.success === false\n//       ) {\n//         this.setState({\n//           noDataFound: response.data.message,\n//         });\n//       }\n//     });\n//   }\n//   toggleNewUserModal = () => {\n//     this.setState({\n//       newUserModal: !this.state.newUserModal,\n//     });\n//   };\n//   onChangeAddUserHandler = (e) => {\n//     let { newUserData } = this.state;\n//     newUserData[e.target.name] = e.target.value;\n//     this.setState({ newUserData });\n//   };\n//   addUser = () => {\n//     axios.post(`api/register`, this.state.newUserData).then((response) => {\n//       const { users } = this.state;\n//       const newUsers = [...users];\n//       newUsers.push(response.data);\n//       this.setState(\n//         {\n//           users: newUsers,\n//           newUserModal: false,\n//           newUserData: {\n//             fullname: \"\",\n//             username: \"\",\n//             email: \"\",\n//             password: \"\",\n//             phone: \"\",\n//           },\n//         },\n//         () => this.getUsers()\n//       );\n//     });\n//   };\n//   //-------------------------------------------------\n//   // Edit User\n//   toggleEditUserModal = () => {\n//     this.setState({\n//       editUserModal: !this.state.editUserModal,\n//     });\n//   };\n//   onChangeEditUserHanler = (e) => {\n//     let { editUserData } = this.state;\n//     editUserData[e.target.name] = e.target.value;\n//     this.setState({ editUserData });\n//   };\n//   editUser = (id, fullname, username, email, phone) => {\n//     this.setState({\n//       editUserData: {\n//         id,\n//         fullname,\n//         username,\n//         email,\n//         phone,\n//       },\n//       editUserModal: !this.state.editUserModal,\n//     });\n//   };\n//   updateUser = () => {\n//     let { id, fullname, username, email, phone } = this.state.editUserData;\n//     this.setState({\n//       isLoading: true,\n//     });\n//     axios\n//       .post(`api/register`, {\n//         fullname,\n//         username,\n//         email,\n//         phone,\n//         id,\n//       })\n//       .then((response) => {\n//         this.getUsers();\n//         this.setState({\n//           editUserModal: false,\n//           editUserData: {\n//             fullname,\n//             username,\n//             email,\n//             phone,\n//             id,\n//           },\n//           isLoading: false,\n//         });\n//       })\n//       .catch((error) => {\n//         this.setState({ isLoading: false });\n//         console.log(error.response);\n//       });\n//   };\n//   deleteUser = (id) => {\n//     this.setState({\n//       isLoading: true,\n//     });\n//     axios\n//       .delete(`api/delete/` + id)\n//       .then((response) => {\n//         this.setState({\n//           isLoading: false,\n//         });\n//         this.getUsers();\n//       })\n//       .catch((error) => {\n//         this.setState({\n//           isLoading: false,\n//         });\n//       });\n//   };\n//   render() {\n//     const { newUserData, editUserData, noDataFound, users } = this.state;\n//     let usersDetails = [];\n//     if (users.length) {\n//       usersDetails = users.map((user, index) => {\n//         return (\n//           <tr key={user.id}>\n//             <td>{index + 1}</td>\n//             <td>{user.fullname}</td>\n//             <td>{user.username}</td>\n//             <td>{user.email}</td>\n//             <td>{user.phone}</td>\n//             <td>\n//               <Button\n//                 color=\"success\"\n//                 className=\"mr-3\"\n//                 size=\"sm\"\n//                 onClick={() =>\n//                   this.editUser(\n//                     user.id,\n//                     user.fullname,\n//                     user.username,\n//                     user.email,\n//                     user.phone\n//                   )\n//                 }\n//               >\n//                 Edit\n//               </Button>\n//               <Button\n//                 color=\"danger\"\n//                 size=\"sm\"\n//                 onClick={() => this.deleteUser(user.id)}\n//               >\n//                 Delete\n//               </Button>\n//             </td>\n//           </tr>\n//         );\n//       });\n//     }\n//     if (this.state.isLoading) {\n//       return (\n//         <div className=\"spinner-border text-center\" role=\"status\">\n//           {\" \"}\n//           <span className=\"sr-only\">Loading...</span>\n//         </div>\n//       );\n//     }\n//     return (\n//       <div className=\"App container mt-4\">\n//         <h4 className=\"font-weight-bold\">Quản lý user</h4>\n//         {/* Model for Add Studnet Record */}\n//         <AddProfile\n//           toggleNewUserModal={this.toggleNewUserModal}\n//           newUserModal={this.state.newUserModal}\n//           onChangeAddUserHandler={this.onChangeAddUserHandler}\n//           addUser={this.addUser}\n//           newUserData={newUserData}\n//         />\n//         {/* Model for Edit User Record */}\n//         <EditProfile\n//           toggleEditUserModal={this.toggleEditUserModal}\n//           editUserModal={this.state.editUserModal}\n//           onChangeEditUserHanler={this.onChangeEditUserHanler}\n//           editUser={this.editUser}\n//           editUserData={editUserData}\n//           updateUser={this.updateUser}\n//         />\n//         <Table>\n//           <thead>\n//             <tr>\n//               <th>ID</th>\n//               <th>Họ và tên</th>\n//               <th>Userame</th>\n//               <th>Email</th>\n//               <th>Điện thoại</th>\n//               <th>Hành động</th>\n//             </tr>\n//           </thead>\n//           {users.length === 0 ? (\n//             <tbody>\n//               <h3>{noDataFound}</h3>\n//             </tbody>\n//           ) : (\n//             <tbody>{usersDetails}</tbody>\n//           )}\n//         </Table>\n//       </div>\n//     );\n//   }\n// }\n// export default Profile;\n//---------------------------------------------------\nimport React, { Component } from \"react\";\nimport { Table, Button } from \"reactstrap\";\nimport axios from \"axios\";\nimport AddProfile from \"./AddProfile\";\nimport EditProfile from \"./EditProfile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleNewStudentModal = () => {\n      this.setState({\n        newStudentModal: !this.state.newStudentModal\n      });\n    };\n\n    this.onChangeAddStudentHandler = e => {\n      let {\n        newStudentData\n      } = this.state;\n      newStudentData[e.target.name] = e.target.value;\n      this.setState({\n        newStudentData\n      });\n    };\n\n    this.addStudent = () => {\n      axios.post(\"http://localhost:8000/api/create-student\", this.state.newStudentData).then(response => {\n        const {\n          students\n        } = this.state;\n        const newStudents = [...students];\n        newStudents.push(response.data);\n        this.setState({\n          students: newStudents,\n          newStudentModal: false,\n          newStudentData: {\n            first_name: \"\",\n            last_name: \"\",\n            email: \"\",\n            phone: \"\"\n          }\n        }, () => this.getStudents());\n      });\n    };\n\n    this.toggleEditStudentModal = () => {\n      this.setState({\n        editStudentModal: !this.state.editStudentModal\n      });\n    };\n\n    this.onChangeEditStudentHanler = e => {\n      let {\n        editStudentData\n      } = this.state;\n      editStudentData[e.target.name] = e.target.value;\n      this.setState({\n        editStudentData\n      });\n    };\n\n    this.editStudent = (id, first_name, last_name, email, phone) => {\n      this.setState({\n        editStudentData: {\n          id,\n          first_name,\n          last_name,\n          email,\n          phone\n        },\n        editStudentModal: !this.state.editStudentModal\n      });\n    };\n\n    this.updateStudent = () => {\n      let {\n        id,\n        first_name,\n        last_name,\n        email,\n        phone\n      } = this.state.editStudentData;\n      this.setState({\n        isLoading: true\n      });\n      axios.post(\"http://localhost:8000/api/create-student\", {\n        first_name,\n        last_name,\n        email,\n        phone,\n        id\n      }).then(response => {\n        this.getStudents();\n        this.setState({\n          editStudentModal: false,\n          editStudentData: {\n            first_name,\n            last_name,\n            email,\n            phone\n          },\n          isLoading: false\n        });\n      }).catch(error => {\n        this.setState({\n          isLoading: false\n        });\n        console.log(error.response);\n      });\n    };\n\n    this.deletStudent = id => {\n      this.setState({\n        isLoading: true\n      });\n      axios.delete(\"http://localhost:8000/api/student/\" + id).then(response => {\n        this.setState({\n          isLoading: false\n        });\n        this.getStudents();\n      }).catch(error => {\n        this.setState({\n          isLoading: false\n        });\n      });\n    };\n\n    this.state = {\n      users: [],\n      newStudentData: {\n        first_name: \"\",\n        last_name: \"\",\n        email: \"\",\n        phone: \"\"\n      },\n      isLoading: false,\n      status: \"\",\n      newStudentModal: false,\n      editStudentData: {\n        id: \"\",\n        first_name: \"\",\n        last_name: \"\",\n        email: \"\",\n        phone: \"\"\n      },\n      editStudentModal: false,\n      noDataFound: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getusers();\n  }\n\n  getusers() {\n    axios.get(`api/profile`).then(response => {\n      if (response.status === 200) {\n        this.setState({\n          users: response.data ? response.data : []\n        });\n      }\n\n      if (response.data.status === \"failed\" && response.data.success === false) {\n        this.setState({\n          noDataFound: response.data.message\n        });\n      }\n    });\n  }\n\n  render() {\n    const {\n      newStudentData,\n      editStudentData,\n      noDataFound,\n      students\n    } = this.state;\n    let studentsDetails = [];\n\n    if (students.length) {\n      studentsDetails = students.map(student => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: student.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: student.first_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: student.last_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: student.full_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: student.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: student.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"success\",\n              className: \"mr-3\",\n              size: \"sm\",\n              onClick: () => this.editStudent(student.id, student.first_name, student.last_name, student.email, student.phone),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"danger\",\n              size: \"sm\",\n              onClick: () => this.deletStudent(student.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 15\n          }, this)]\n        }, student.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 13\n        }, this);\n      });\n    }\n\n    if (this.state.isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-center\",\n        role: \"status\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sr-only\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 75\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 16\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App container mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"font-weight-bold\",\n        children: \"Students Registration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(AddStudents, {\n        toggleNewStudentModal: this.toggleNewStudentModal,\n        newStudentModal: this.state.newStudentModal,\n        onChangeAddStudentHandler: this.onChangeAddStudentHandler,\n        addStudent: this.addStudent,\n        newStudentData: newStudentData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(EditStudent, {\n        toggleEditStudentModal: this.toggleEditStudentModal,\n        editStudentModal: this.state.editStudentModal,\n        onChangeEditStudentHanler: this.onChangeEditStudentHanler,\n        editStudent: this.editStudent,\n        editStudentData: editStudentData,\n        updateStudent: this.updateStudent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Full Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 11\n        }, this), students.length === 0 ? /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: noDataFound\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: studentsDetails\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/xampp/htdocs/EASY_TEAM_4/gradution/FrontEnd/src/components/admin/Profile/Profile.js"],"names":["React","Component","Table","Button","axios","AddProfile","EditProfile","Profile","constructor","props","toggleNewStudentModal","setState","newStudentModal","state","onChangeAddStudentHandler","e","newStudentData","target","name","value","addStudent","post","then","response","students","newStudents","push","data","first_name","last_name","email","phone","getStudents","toggleEditStudentModal","editStudentModal","onChangeEditStudentHanler","editStudentData","editStudent","id","updateStudent","isLoading","catch","error","console","log","deletStudent","delete","users","status","noDataFound","componentDidMount","getusers","get","success","message","render","studentsDetails","length","map","student","full_name"],"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","sourcesContent":["// import React from \"react\";\r\n// import { Table, Button } from \"reactstrap\";\r\n// import axios from \"axios\";\r\n// import AddProfile from \"./AddProfile\";\r\n// import EditProfile from \"./EditProfile\";\r\n// class Profile extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       user: [],\r\n//       newUserData: {\r\n//         first_name: \"\",\r\n//         last_name: \"\",\r\n//         email: \"\",\r\n//         phone: \"\",\r\n//       },\r\n//       isLoading: false,\r\n//       status: \"\",\r\n//       newUserModal: false,\r\n//       editUserData: {\r\n//         id: \"\",\r\n//         first_name: \"\",\r\n//         last_name: \"\",\r\n//         email: \"\",\r\n//         phone: \"\",\r\n//       },\r\n//       editUserModal: false,\r\n//       noDataFound: \"\",\r\n//     };\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     this.getUsers();\r\n//   }\r\n//   getUsers() {\r\n//     axios.get(`api/profile`).then((response) => {\r\n//       if (response.status === 200) {\r\n//         this.setState({\r\n//           users: response.data ? response.data : [],\r\n//         });\r\n//       }\r\n//       if (\r\n//         response.data.status === \"failed\" &&\r\n//         response.data.success === false\r\n//       ) {\r\n//         this.setState({\r\n//           noDataFound: response.data.message,\r\n//         });\r\n//       }\r\n//     });\r\n//   }\r\n\r\n//   toggleNewUserModal = () => {\r\n//     this.setState({\r\n//       newUserModal: !this.state.newUserModal,\r\n//     });\r\n//   };\r\n//   onChangeAddUserHandler = (e) => {\r\n//     let { newUserData } = this.state;\r\n//     newUserData[e.target.name] = e.target.value;\r\n//     this.setState({ newUserData });\r\n//   };\r\n//   addUser = () => {\r\n//     axios.post(`api/register`, this.state.newUserData).then((response) => {\r\n//       const { users } = this.state;\r\n//       const newUsers = [...users];\r\n//       newUsers.push(response.data);\r\n//       this.setState(\r\n//         {\r\n//           users: newUsers,\r\n//           newUserModal: false,\r\n//           newUserData: {\r\n//             fullname: \"\",\r\n//             username: \"\",\r\n//             email: \"\",\r\n//             password: \"\",\r\n//             phone: \"\",\r\n//           },\r\n//         },\r\n//         () => this.getUsers()\r\n//       );\r\n//     });\r\n//   };\r\n\r\n//   //-------------------------------------------------\r\n\r\n//   // Edit User\r\n//   toggleEditUserModal = () => {\r\n//     this.setState({\r\n//       editUserModal: !this.state.editUserModal,\r\n//     });\r\n//   };\r\n\r\n//   onChangeEditUserHanler = (e) => {\r\n//     let { editUserData } = this.state;\r\n//     editUserData[e.target.name] = e.target.value;\r\n//     this.setState({ editUserData });\r\n//   };\r\n\r\n//   editUser = (id, fullname, username, email, phone) => {\r\n//     this.setState({\r\n//       editUserData: {\r\n//         id,\r\n//         fullname,\r\n//         username,\r\n//         email,\r\n//         phone,\r\n//       },\r\n//       editUserModal: !this.state.editUserModal,\r\n//     });\r\n//   };\r\n\r\n//   updateUser = () => {\r\n//     let { id, fullname, username, email, phone } = this.state.editUserData;\r\n//     this.setState({\r\n//       isLoading: true,\r\n//     });\r\n//     axios\r\n//       .post(`api/register`, {\r\n//         fullname,\r\n//         username,\r\n//         email,\r\n//         phone,\r\n//         id,\r\n//       })\r\n//       .then((response) => {\r\n//         this.getUsers();\r\n//         this.setState({\r\n//           editUserModal: false,\r\n//           editUserData: {\r\n//             fullname,\r\n//             username,\r\n//             email,\r\n//             phone,\r\n//             id,\r\n//           },\r\n//           isLoading: false,\r\n//         });\r\n//       })\r\n//       .catch((error) => {\r\n//         this.setState({ isLoading: false });\r\n//         console.log(error.response);\r\n//       });\r\n//   };\r\n\r\n//   deleteUser = (id) => {\r\n//     this.setState({\r\n//       isLoading: true,\r\n//     });\r\n//     axios\r\n//       .delete(`api/delete/` + id)\r\n//       .then((response) => {\r\n//         this.setState({\r\n//           isLoading: false,\r\n//         });\r\n//         this.getUsers();\r\n//       })\r\n//       .catch((error) => {\r\n//         this.setState({\r\n//           isLoading: false,\r\n//         });\r\n//       });\r\n//   };\r\n\r\n//   render() {\r\n//     const { newUserData, editUserData, noDataFound, users } = this.state;\r\n//     let usersDetails = [];\r\n//     if (users.length) {\r\n//       usersDetails = users.map((user, index) => {\r\n//         return (\r\n//           <tr key={user.id}>\r\n//             <td>{index + 1}</td>\r\n//             <td>{user.fullname}</td>\r\n//             <td>{user.username}</td>\r\n//             <td>{user.email}</td>\r\n//             <td>{user.phone}</td>\r\n//             <td>\r\n//               <Button\r\n//                 color=\"success\"\r\n//                 className=\"mr-3\"\r\n//                 size=\"sm\"\r\n//                 onClick={() =>\r\n//                   this.editUser(\r\n//                     user.id,\r\n//                     user.fullname,\r\n//                     user.username,\r\n//                     user.email,\r\n//                     user.phone\r\n//                   )\r\n//                 }\r\n//               >\r\n//                 Edit\r\n//               </Button>\r\n//               <Button\r\n//                 color=\"danger\"\r\n//                 size=\"sm\"\r\n//                 onClick={() => this.deleteUser(user.id)}\r\n//               >\r\n//                 Delete\r\n//               </Button>\r\n//             </td>\r\n//           </tr>\r\n//         );\r\n//       });\r\n//     }\r\n\r\n//     if (this.state.isLoading) {\r\n//       return (\r\n//         <div className=\"spinner-border text-center\" role=\"status\">\r\n//           {\" \"}\r\n//           <span className=\"sr-only\">Loading...</span>\r\n//         </div>\r\n//       );\r\n//     }\r\n//     return (\r\n//       <div className=\"App container mt-4\">\r\n//         <h4 className=\"font-weight-bold\">Quản lý user</h4>\r\n//         {/* Model for Add Studnet Record */}\r\n//         <AddProfile\r\n//           toggleNewUserModal={this.toggleNewUserModal}\r\n//           newUserModal={this.state.newUserModal}\r\n//           onChangeAddUserHandler={this.onChangeAddUserHandler}\r\n//           addUser={this.addUser}\r\n//           newUserData={newUserData}\r\n//         />\r\n//         {/* Model for Edit User Record */}\r\n//         <EditProfile\r\n//           toggleEditUserModal={this.toggleEditUserModal}\r\n//           editUserModal={this.state.editUserModal}\r\n//           onChangeEditUserHanler={this.onChangeEditUserHanler}\r\n//           editUser={this.editUser}\r\n//           editUserData={editUserData}\r\n//           updateUser={this.updateUser}\r\n//         />\r\n//         <Table>\r\n//           <thead>\r\n//             <tr>\r\n//               <th>ID</th>\r\n//               <th>Họ và tên</th>\r\n//               <th>Userame</th>\r\n//               <th>Email</th>\r\n//               <th>Điện thoại</th>\r\n//               <th>Hành động</th>\r\n//             </tr>\r\n//           </thead>\r\n//           {users.length === 0 ? (\r\n//             <tbody>\r\n//               <h3>{noDataFound}</h3>\r\n//             </tbody>\r\n//           ) : (\r\n//             <tbody>{usersDetails}</tbody>\r\n//           )}\r\n//         </Table>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n// export default Profile;\r\n//---------------------------------------------------\r\nimport React, { Component } from \"react\";\r\nimport { Table, Button } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport AddProfile from \"./AddProfile\";\r\nimport EditProfile from \"./EditProfile\";\r\n\r\nexport default class Profile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          users: [],\r\n          newStudentData: {\r\n            first_name: \"\",\r\n            last_name: \"\",\r\n            email: \"\",\r\n            phone: \"\",\r\n          },\r\n          isLoading: false,\r\n          status: \"\",\r\n          newStudentModal: false,\r\n          editStudentData: {\r\n            id: \"\",\r\n            first_name: \"\",\r\n            last_name: \"\",\r\n            email: \"\",\r\n            phone: \"\",\r\n          },\r\n          editStudentModal: false,\r\n          noDataFound: \"\",\r\n        };\r\n      }\r\n\r\n    componentDidMount() {\r\n        this.getusers();\r\n      }      \r\n    getusers() {\r\n    axios.get(`api/profile`).then((response) => {\r\n        if (response.status === 200) {\r\n        this.setState({\r\n            users: response.data ? response.data: [],\r\n        });\r\n        }\r\n        if (\r\n        response.data.status === \"failed\" &&\r\n        response.data.success === false\r\n        ) {\r\n        this.setState({\r\n            noDataFound: response.data.message,\r\n        });\r\n        }\r\n    });\r\n    } \r\n\r\n    toggleNewStudentModal = () => {\r\n        this.setState({\r\n          newStudentModal: !this.state.newStudentModal,\r\n        });\r\n      };\r\n    onChangeAddStudentHandler = (e) => {\r\n        let { newStudentData } = this.state;\r\n        newStudentData[e.target.name] = e.target.value;\r\n        this.setState({ newStudentData });\r\n    };\r\n    addStudent = () => {\r\n        axios\r\n          .post(\r\n            \"http://localhost:8000/api/create-student\",\r\n            this.state.newStudentData\r\n          )\r\n          .then((response) => {\r\n            const { students } = this.state;\r\n            const newStudents = [...students];\r\n            newStudents.push(response.data);\r\n            this.setState(\r\n              {\r\n                students: newStudents,\r\n                newStudentModal: false,\r\n                newStudentData: {\r\n                  first_name: \"\",\r\n                  last_name: \"\",\r\n                  email: \"\",\r\n                  phone: \"\",\r\n                },\r\n              },\r\n              () => this.getStudents()\r\n            );\r\n          });\r\n      };\r\n\r\n      toggleEditStudentModal = () => {\r\n        this.setState({\r\n          editStudentModal: !this.state.editStudentModal,\r\n        });\r\n      };\r\n\r\n      onChangeEditStudentHanler = (e) => {\r\n        let { editStudentData } = this.state;\r\n        editStudentData[e.target.name] = e.target.value;\r\n        this.setState({ editStudentData });\r\n      };\r\n\r\n      editStudent = (id, first_name, last_name, email, phone) => {\r\n        this.setState({\r\n          editStudentData: { id, first_name, last_name, email, phone },\r\n          editStudentModal: !this.state.editStudentModal,\r\n        });\r\n      };\r\n      \r\n      updateStudent = () => {\r\n        let {\r\n          id,\r\n          first_name,\r\n          last_name,\r\n          email,\r\n          phone,\r\n        } = this.state.editStudentData;\r\n        this.setState({\r\n          isLoading: true,\r\n        });\r\n        axios\r\n          .post(\"http://localhost:8000/api/create-student\", {\r\n            first_name,\r\n            last_name,\r\n            email,\r\n            phone,\r\n            id,\r\n          })\r\n          .then((response) => {\r\n            this.getStudents();\r\n            this.setState({\r\n              editStudentModal: false,\r\n              editStudentData: { first_name, last_name, email, phone },\r\n              isLoading:false,\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            this.setState({isLoading:false})\r\n            console.log(error.response);\r\n          });\r\n      };\r\n    \r\n      deletStudent = (id) => {\r\n        this.setState({\r\n          isLoading: true,\r\n        });\r\n        axios\r\n          .delete(\"http://localhost:8000/api/student/\" + id)\r\n          .then((response) => {\r\n            this.setState({\r\n              isLoading: false,\r\n            });\r\n            this.getStudents();\r\n          })\r\n          .catch((error) => {\r\n            this.setState({\r\n              isLoading: false,\r\n            });\r\n          });\r\n      };\r\n  \r\n    \r\n  render() {\r\n    const { newStudentData,editStudentData,noDataFound,students} = this.state;\r\n      let studentsDetails = [];\r\n      if (students.length) {\r\n        studentsDetails = students.map((student) => {\r\n          return (\r\n            <tr key={student.id}>\r\n              <td>{student.id}</td>\r\n              <td>{student.first_name}</td>\r\n              <td>{student.last_name}</td>\r\n              <td>{student.full_name}</td>\r\n              <td>{student.email}</td>\r\n              <td>{student.phone}</td>\r\n              <td>\r\n                <Button\r\n                  color=\"success\"\r\n                  className=\"mr-3\"\r\n                  size=\"sm\"\r\n                  onClick={() =>\r\n                    this.editStudent(\r\n                      student.id,\r\n                      student.first_name,\r\n                      student.last_name,\r\n                      student.email,\r\n                      student.phone\r\n                    )\r\n                  }\r\n                >\r\n                  Edit\r\n                </Button>\r\n                <Button\r\n                  color=\"danger\"\r\n                  size=\"sm\"\r\n                  onClick={() => this.deletStudent(student.id)}\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </td>\r\n            </tr>\r\n          );\r\n        });\r\n      }\r\n  \r\n      if (this.state.isLoading) {\r\n        return <div className=\"spinner-border text-center\" role=\"status\"> <span className=\"sr-only\">Loading...</span>\r\n      </div>\r\n      } \r\n    return (\r\n      <div className=\"App container mt-4\">\r\n           <h4 className=\"font-weight-bold\">Students Registration</h4> \r\n            {/* Model for Add Studnet Record */}\r\n           <AddStudents\r\n                toggleNewStudentModal={this.toggleNewStudentModal}\r\n                newStudentModal={this.state.newStudentModal}\r\n                onChangeAddStudentHandler={this.onChangeAddStudentHandler}\r\n                addStudent={this.addStudent}\r\n                newStudentData={newStudentData}\r\n          />\r\n         {/* Model for Edit Studnet Record */}\r\n            <EditStudent\r\n            toggleEditStudentModal={this.toggleEditStudentModal}\r\n            editStudentModal={this.state.editStudentModal}\r\n            onChangeEditStudentHanler={this.onChangeEditStudentHanler}\r\n            editStudent={this.editStudent}\r\n            editStudentData={editStudentData}\r\n            updateStudent={this.updateStudent}\r\n            />\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>First Name</th>\r\n              <th>Last Name</th>\r\n              <th>Full Name</th>\r\n              <th>Email</th>\r\n              <th>Phone</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          {students.length === 0 ? (\r\n            <tbody>\r\n              <h3>{noDataFound}</h3>\r\n            </tbody>\r\n          ) : (\r\n            <tbody>{studentsDetails}</tbody>\r\n          )}\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}