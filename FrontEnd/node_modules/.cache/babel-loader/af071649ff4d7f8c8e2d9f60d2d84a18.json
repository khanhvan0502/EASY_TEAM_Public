{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\gradution\\\\FrontEnd\\\\src\\\\AdminPrivateRoute.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MasterLayout from './layouts/admin/MasterLayout';\nimport { Redirect, Route } from \"react-router\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AdminPrivateRoute(_ref) {\n  _s();\n\n  let { ...rest\n  } = _ref;\n  const [Authenticated, setAuthenticated] = useState(false);\n  const [loading, setloading] = useState(true);\n  useEffect(() => {\n    axios.get(`/api/checkingAuthenticated`).then(res => {\n      if (res.status === 200) {\n        setAuthenticated(true);\n      }\n\n      setloading(false);\n    });\n    return () => {\n      setAuthenticated(false);\n    };\n  }, []);\n  axios.interceptors.response.use(undefined, function axiosRetryInterceptor() {});\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: _ref2 => {\n      let {\n        props,\n        location\n      } = _ref2;\n      return Authenticated ? /*#__PURE__*/_jsxDEV(MasterLayout, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          path: \"/login\",\n          state: {\n            from: location\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 22\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AdminPrivateRoute, \"0v9oqRL58szUHZsycVZLDWFVQdU=\");\n\n_c = AdminPrivateRoute;\nexport default AdminPrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminPrivateRoute\");","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/gradution/FrontEnd/src/AdminPrivateRoute.js"],"names":["React","useState","useEffect","MasterLayout","Redirect","Route","axios","AdminPrivateRoute","rest","Authenticated","setAuthenticated","loading","setloading","get","then","res","status","interceptors","response","use","undefined","axiosRetryInterceptor","props","location","path","state","from"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,cAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,iBAAT,OAAwC;AAAA;;AAAA,MAAb,EAAE,GAAGC;AAAL,GAAa;AAEpC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC;AAIAC,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,KAAK,CAACO,GAAN,CAAW,4BAAX,EAAwCC,IAAxC,CAA6CC,GAAG,IAAI;AAChD,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpBN,QAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH;;AACDE,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KALD;AAMA,WAAO,MAAM;AACTF,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH,KAFD;AAGH,GAVQ,EAUN,EAVM,CAAT;AAYAJ,EAAAA,KAAK,CAACW,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CAAgCC,SAAhC,EAA2C,SAASC,qBAAT,GAAiC,CAE3E,CAFD;;AAKA,MAAIV,OAAJ,EAAa;AACT,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI,QAAC,KAAD,OAAWH,IAAX;AACI,IAAA,MAAM,EAAE;AAAA,UAAC;AAAEc,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAAD;AAAA,aACJd,aAAa,gBACR,QAAC,YAAD,OAAkBa;AAAlB;AAAA;AAAA;AAAA;AAAA,cADQ,gBAER,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAAEE,UAAAA,IAAI,EAAE,QAAR;AAAkBC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEH;AAAR;AAAzB;AAAd;AAAA;AAAA;AAAA;AAAA,cAHD;AAAA;AADZ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GArCQhB,iB;;KAAAA,iB;AAuCT,eAAeA,iBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport MasterLayout from './layouts/admin/MasterLayout';\r\nimport { Redirect, Route } from \"react-router\";\r\nimport axios from \"axios\";\r\n\r\nfunction AdminPrivateRoute({ ...rest }) {\r\n\r\n    const [Authenticated, setAuthenticated] = useState(false);\r\n    const [loading, setloading] = useState(true);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(`/api/checkingAuthenticated`).then(res => {\r\n            if (res.status === 200) {\r\n                setAuthenticated(true);\r\n            }\r\n            setloading(false);\r\n        });\r\n        return () => {\r\n            setAuthenticated(false);\r\n        }\r\n    }, []);\r\n\r\n    axios.interceptors.response.use(undefined, function axiosRetryInterceptor() {\r\n\r\n    }\r\n    );\r\n\r\n    if (loading) {\r\n        return <h1>Loading ...</h1>\r\n    }\r\n\r\n    return (\r\n        <Route {...rest}\r\n            render={({ props, location }) =>\r\n                Authenticated ?\r\n                    (<MasterLayout {...props} />) :\r\n                    (<Redirect to={{ path: \"/login\", state: { from: location } }} />)\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport default AdminPrivateRoute;"]},"metadata":{},"sourceType":"module"}